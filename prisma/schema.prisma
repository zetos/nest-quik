// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name    String    @db.VarChar(100)
  hash    String    @db.VarChar(100)
  email   String    @unique @db.VarChar(191)
  Post    Post[]
  Comment Comment[]

  @@map("users")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likes     Int
  dislikes  Int

  userId Int
  user   User @relation(fields: [userId], references: [id])

  title       String  @db.VarChar(100)
  description String  @db.Text()
  imageUrl    String?

  Comment Comment[]

  history PostHistory[]

  @@map("posts")
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int
  user   User @relation(fields: [userId], references: [id])

  postId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  description String @db.Text()

  @@map("comments")
}

model PostHistory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String @db.VarChar(100)
  description String @db.Text()
  Post        Post?  @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId      Int?

  @@map("postHistory")
}

// User:
//  id: id primary_key
//  name: string:100
//  email: string:191

// Post:
//  id: id primary_key
//  user_id: id foreign:users
//  title: string:100
//  description: text
//  likes: number
//  dislikes: number
//  deletedBy: null

// Comment:
//  id: id primary_key
//  user_id: id foreign:users
//  post_id: id foreign:posts
//  description: text
